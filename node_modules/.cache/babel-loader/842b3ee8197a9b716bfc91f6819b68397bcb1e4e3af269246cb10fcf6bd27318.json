{"ast":null,"code":"var _jsxFileName = \"/Users/divyakasa/Desktop/Project_X/Eco_Explorer_App/eco-globe/src/components/EarthGlobe.js\",\n  _s = $RefreshSig$();\n// src/components/EarthGlobe.js\nimport React, { useRef } from 'react';\nimport { useLoader, useFrame } from '@react-three/fiber';\nimport { TextureLoader } from 'three';\nimport * as THREE from 'three';\nimport { Html } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EarthGlobe = ({\n  onSelectEcosystem,\n  ecosystems\n}) => {\n  _s();\n  const earthRef = useRef();\n  const pointsRef = useRef();\n  const earthTexture = useLoader(TextureLoader, '/textures/earth.jpg');\n  earthTexture.wrapS = THREE.RepeatWrapping;\n  earthTexture.wrapT = THREE.RepeatWrapping;\n  earthTexture.repeat.set(1, 1);\n  earthTexture.minFilter = THREE.LinearFilter;\n  earthTexture.magFilter = THREE.LinearFilter;\n  useFrame(() => {\n    if (earthRef.current) {\n      earthRef.current.rotation.y += 0.001;\n    }\n    if (pointsRef.current) {\n      pointsRef.current.rotation.y += 0.001;\n    }\n  });\n  const calculatePosition = (latitude, longitude, radius) => {\n    const phi = (90 - latitude) * (Math.PI / 180);\n    const theta = (longitude + 180) * (Math.PI / 180);\n    return [-radius * Math.sin(phi) * Math.cos(theta), radius * Math.cos(phi), radius * Math.sin(phi) * Math.sin(theta)];\n  };\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: earthRef,\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [2, 64, 64]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        map: earthTexture,\n        metalness: 0.1,\n        roughness: 1,\n        side: THREE.DoubleSide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n      ref: pointsRef,\n      children: ecosystems.map((eco, index) => {\n        const [x, y, z] = calculatePosition(eco.coordinates[0], eco.coordinates[1], 2.05);\n        return /*#__PURE__*/_jsxDEV(\"group\", {\n          position: [x, y, z],\n          children: [/*#__PURE__*/_jsxDEV(Html, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => onSelectEcosystem(eco),\n              className: \"w-4 h-4 rounded-full cursor-pointer transform hover:scale-125 transition-all duration-200 flex items-center justify-center\",\n              style: {\n                backgroundColor: eco.color,\n                boxShadow: `0 0 10px ${eco.color}`,\n                border: '2px solid white',\n                transform: 'translate(-50%, -50%)',\n                cursor: 'pointer' // Add cursor pointer\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute w-full h-full rounded-full opacity-0 hover:opacity-50 transition-opacity duration-200\",\n                style: {\n                  backgroundColor: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n            children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n              args: [0.02, 16, 16]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n              color: eco.color,\n              transparent: true,\n              opacity: 0.8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(EarthGlobe, \"KELVrx+vtvKYqnABA/2MJ0B2Yzw=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c = EarthGlobe;\nexport default EarthGlobe;\nvar _c;\n$RefreshReg$(_c, \"EarthGlobe\");","map":{"version":3,"names":["React","useRef","useLoader","useFrame","TextureLoader","THREE","Html","jsxDEV","_jsxDEV","EarthGlobe","onSelectEcosystem","ecosystems","_s","earthRef","pointsRef","earthTexture","wrapS","RepeatWrapping","wrapT","repeat","set","minFilter","LinearFilter","magFilter","current","rotation","y","calculatePosition","latitude","longitude","radius","phi","Math","PI","theta","sin","cos","children","ref","args","fileName","_jsxFileName","lineNumber","columnNumber","map","metalness","roughness","side","DoubleSide","eco","index","x","z","coordinates","position","onClick","className","style","backgroundColor","color","boxShadow","border","transform","cursor","transparent","opacity","_c","$RefreshReg$"],"sources":["/Users/divyakasa/Desktop/Project_X/Eco_Explorer_App/eco-globe/src/components/EarthGlobe.js"],"sourcesContent":["// src/components/EarthGlobe.js\nimport React, { useRef } from 'react';\nimport { useLoader, useFrame } from '@react-three/fiber';\nimport { TextureLoader } from 'three';\nimport * as THREE from 'three';\nimport { Html } from '@react-three/drei';\n\nconst EarthGlobe = ({ onSelectEcosystem, ecosystems }) => {\n  const earthRef = useRef();\n  const pointsRef = useRef();\n  const earthTexture = useLoader(TextureLoader, '/textures/earth.jpg');\n\n  earthTexture.wrapS = THREE.RepeatWrapping;\n  earthTexture.wrapT = THREE.RepeatWrapping;\n  earthTexture.repeat.set(1, 1);\n  earthTexture.minFilter = THREE.LinearFilter;\n  earthTexture.magFilter = THREE.LinearFilter;\n\n  useFrame(() => {\n    if (earthRef.current) {\n      earthRef.current.rotation.y += 0.001;\n    }\n    if (pointsRef.current) {\n      pointsRef.current.rotation.y += 0.001;\n    }\n  });\n\n  const calculatePosition = (latitude, longitude, radius) => {\n    const phi = (90 - latitude) * (Math.PI / 180);\n    const theta = (longitude + 180) * (Math.PI / 180);\n    \n    return [\n      -radius * Math.sin(phi) * Math.cos(theta),\n      radius * Math.cos(phi),\n      radius * Math.sin(phi) * Math.sin(theta)\n    ];\n  };\n\n  return (\n    <group>\n      {/* Earth Sphere */}\n      <mesh ref={earthRef}>\n        <sphereGeometry args={[2, 64, 64]} />\n        <meshStandardMaterial \n          map={earthTexture}\n          metalness={0.1}\n          roughness={1}\n          side={THREE.DoubleSide}\n        />\n      </mesh>\n\n      {/* Points Container */}\n      <group ref={pointsRef}>\n        {ecosystems.map((eco, index) => {\n          const [x, y, z] = calculatePosition(\n            eco.coordinates[0],\n            eco.coordinates[1],\n            2.05\n          );\n\n          return (\n            <group \n              key={index} \n              position={[x, y, z]}\n            >\n              {/* Interactive Point Marker */}\n              <Html>\n                <div\n                  onClick={() => onSelectEcosystem(eco)}\n                  className=\"w-4 h-4 rounded-full cursor-pointer transform hover:scale-125 transition-all duration-200 flex items-center justify-center\"\n                  style={{\n                    backgroundColor: eco.color,\n                    boxShadow: `0 0 10px ${eco.color}`,\n                    border: '2px solid white',\n                    transform: 'translate(-50%, -50%)',\n                    cursor: 'pointer' // Add cursor pointer\n                  }}\n                >\n                  {/* Optional: Add hover effect indicator */}\n                  <div\n                    className=\"absolute w-full h-full rounded-full opacity-0 hover:opacity-50 transition-opacity duration-200\"\n                    style={{\n                      backgroundColor: 'white'\n                    }}\n                  />\n                </div>\n              </Html>\n\n              {/* Glowing Effect */}\n              <mesh>\n                <sphereGeometry args={[0.02, 16, 16]} />\n                <meshBasicMaterial\n                  color={eco.color}\n                  transparent\n                  opacity={0.8}\n                />\n              </mesh>\n            </group>\n          );\n        })}\n      </group>\n    </group>\n  );\n};\n\nexport default EarthGlobe;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}